version: '3'

volumes:
    db_data: {}
    logs: {}
    downloads: {}

services:
    server:
        container_name: mega_bot
        ports:
            - 3030:3030
        networks:
            mega_crm:
        environment:
            - LOGS_PATH=${LOGS_PATH}
        volumes:
            - logs:${LOGS_PATH}"
            - downloads:${DOWNLOADS_PATH}"
        build:
            context: .
            dockerfile: docker/Dockerfile
        restart: always
        depends_on:
            - db
        links:
            - db
        env_file:
            - .env
        command: [ "/bin/sh", "-c", "npm run migrate:deploy && npm run start" ]
    
    schedule:
        container_name: mega_scheduler
        networks:
            mega_crm:
        environment:
            - LOGS_PATH=${LOGS_PATH}
        build:
            context: .
            dockerfile: docker/Dockerfile
        restart: always
        depends_on:
            - db
        links:
            - db
        volumes:
            - logs:${LOGS_PATH}"
            - downloads:${DOWNLOADS_PATH}"
        env_file:
            - .env
        command: [ "/bin/sh", "-c", "npm run migrate:deploy && npm run schedule" ]
    
    db:
        container_name: mega_db
        image: postgres
        restart: always
        environment:
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASS}
        networks:
            mega_crm:
        ports:
            - 54324:5432
        volumes:
            - ./docker/postgres/:/docker-entrypoint-initdb.d/
            - db_data:/var/lib/postgresql/data
        env_file:
            - .env

networks:
    mega_crm:
